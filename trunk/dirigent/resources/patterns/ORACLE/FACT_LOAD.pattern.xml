<?xml version="1.0" encoding="UTF-8"?>
<tns:Pattern xmlns:tns="http://www.example.org/dirigent-pattern/"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.example.org/dirigent-pattern/ ../dirigent-pattern.xsd ">
	<Documentation>TODO</Documentation>

	<PatternStep ignoreErrors="true" name="Drop Stage Table" type="JDBCStatement">
		<Template><![CDATA[    
		DROP TABLE STG_${element.targetTable.name}
    ]]>
    </Template>
	</PatternStep>

	<PatternStep name="Create Stage Table" type="JDBCStatement">
		<Template><![CDATA[    
		CREATE TABLE STG_${element.targetTable.name}
		(
			${element.targetColumnList}
		)
		as
		${element.SQLQuery}
    ]]>
    </Template>
	</PatternStep>

	<PatternStep name="Merge" type="JDBCStatement">
		<Template><![CDATA[ 
	MERGE INTO ${element.targetTable.name} target
	USING
		(
		SELECT *
		FROM STG_${element.targetTable.name}
		MINUS
			(
			SELECT ${element.targetColumnList}
			FROM ${element.targetTable.fullName}
			)
		) stage
	ON
		(
			#set($res = "")
			#foreach( ${dim} in ${element.targetTable.relatedDimensions} )
				#set($res = ${utils.joinStrings($res, "target.${dim.alias}_KEY = stage.${dim.alias}_KEY", " AND ")})
			#end
			${res}
			#*${utils.getWhereClausule(${element.targetTable.relatedDimensionsColumn}, "=", "AND", "target", "stage")}*#
		)
	WHEN MATCHED THEN
		UPDATE
		SET
		${utils.getWhereClausule(${element.targetTable.columns}, "=", ",", "target", "stage")}
		
	WHEN NOT MATCHED THEN
		INSERT
		(
			${element.targetColumnList},
			${element.targetTable.alias}_KEY
    	)
    	VALUES
    	(
    		#set($res = "")
    		#foreach( ${col} in ${element.columnMappings} )#set($res = ${utils.joinStrings(${res}, "stage.${col.column.name}", ",")})#end
    		
			#*
			#foreach( ${column} in ${element.targetTable.columns} )#set($res = ${utils.joinStrings(${res}, "stage.${column.name}", ",")})#end
			#foreach( ${column} in ${element.targetTable.relatedDimensions} )#set($res = ${utils.joinStrings(${res}, "stage.${column.alias}_KEY", ",")})#end
			*#
			#set($res = ${utils.joinStrings(${res}, "${element.targetTable.alias}_SEQ.NEXTVAL", ",")})
			$res
    	)
    ]]>
    </Template>
	</PatternStep>
</tns:Pattern>
