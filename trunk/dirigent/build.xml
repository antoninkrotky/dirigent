<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>
<!-- ====================================================================== 
     ant-java    
     Obecný build script pro JAVA projekty. Importuje ant-generic.                                                              
     ====================================================================== -->
<project name="dirigent" default="default">
	

	<property name="src.dir" value="src" />
	<property name="lib.dir" value="lib" />
	<property name="build.dir" value="build" />
	<property name="tmp.dir" value="${build.dir}/tmp" />	
	<property name="version" value="1.0" description="Project version. Override this property in your build script."/>
	<buildnumber/>
	<property name="vendor" value="DIRIGENT" description="Vendor name."/>
	<property name="doc.target.dir" value="${build.dir}/doc" />
	<property name="doc.src.dir" value="doc" />
	<property name="doc.target.dir" value="${build.dir}/doc" />
	<property name="javadoc.dir" value="${doc.target.dir}/javadoc" />
	<property name="tmp.bin.dir" value="${tmp.dir}/bin" />
	<property name="kettle-plugin.dir" value="${build.dir}/plugins/jobentries/Dirigent" />
	
	<target name="clean">
		<delete dir="${build.dir}">
		</delete>
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${tmp.dir}" />
	</target>
	
	<target name="drop-temp">
		<delete dir="${tmp.dir}"/>
	</target>

	
	
	<macrodef name="svnLog" description="Replace token in target file with svn revision log.">
		<attribute name="file"/>
		<attribute name="token"/>
		<attribute name="limit" default="20"/>
		<sequential>
			<exec command="svn" outputproperty="svn.log">
				<arg line="log -l @{limit}" />
			</exec>
			<replace file="@{file}" value="${svn.log}" token="@{token}">
			</replace>
		</sequential>
	</macrodef>
	
	<path id="classpath">
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<description>
            Generic build file for java projects.
    </description>




	<!-- ================================= 
          Vytvoří javadoc a vyexportuje zkompilovane třídy do jar souboru.             
         ================================= -->
	<target name="default" depends="doc,create-jar,kettle-plugin" description="Vytvoří javadoc a vyexportuje zkompilovane třídy do jar souboru." >
		
		<delete dir="${tmp.dir}"/>
	</target>
	
	<target name="kettle-plugin">
		<copy todir="${kettle-plugin.dir}/lib" flatten="true">
			<fileset dir="${lib.dir}">
				<include name="*/**.jar"/>
				<exclude name="ext"/>
			</fileset>
		</copy>
		<copy todir="${kettle-plugin.dir}">
			<fileset dir="${src.dir}">
				<include name="icon.png"/>
				<include name="plugin.xml"/>
			</fileset>
			<fileset dir="${build.dir}">
				<include name="*.jar"/>
			</fileset>
		</copy>	
	</target>


	<!-- ================================= 
          Vytvoří javadoc.             
         ================================= -->
	<target name="javadoc" depends="clean">
		<mkdir dir="${javadoc.dir}" />
		<javadoc sourcepath="src" classpathref="classpath" destdir="${javadoc.dir}">
		</javadoc>
	</target>

	<!-- ================================= 
          Zkompiluje obsah zdrojové složky.             
         ================================= -->
	<target name="compile" depends="clean">
		<mkdir dir="${tmp.bin.dir}" />
		<echo message="${toString:classpath}"/>
		<javac srcdir="${src.dir}" classpathref="classpath" destdir="${tmp.bin.dir}" debug="true"/>
		<copy todir="${tmp.bin.dir}">
			<fileset dir="${src.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<mkdir dir="${tmp.bin.dir}/META-INF" />
	</target>

	<!-- ================================= 
          Vytvoří manifest.             
         ================================= -->
	<target name="manifest">
		<manifest file="${tmp.bin.dir}/META-INF/MANIFEST.MF">
			<attribute name="Built-By" value="${user.name}" />
			<section name="common">
				<attribute name="Specification-Title" value="${ant.project.name}" />
				<attribute name="Specification-Version" value="${version}.${build.number}" />
				<attribute name="Specification-Vendor" value="${vendor}" />
				<attribute name="Implementation-Title" value="${ant.project.name}" />
				<attribute name="Implementation-Version" value="${version}.${build.number}" />
				<attribute name="Implementation-Vendor" value="${vendor}" />
			</section>
		</manifest>
	</target>

	<!-- ================================= 
          Vytvoří jar se zkompilovanými třídami.             
         ================================= -->
	<target name="create-jar" depends="compile,manifest">
		<jar destfile="${build.dir}/${ant.project.name}_${version}.jar" basedir="${tmp.bin.dir}" manifest="${tmp.bin.dir}/META-INF/MANIFEST.MF">
			<exclude name="*.properties"/>
		</jar>
	</target>



	<!-- ================================= 
          Vytvoří jeden jar se zkompilovanými třídami projektu a všemi závislostmi (obsahem jar souborů v lib adresáři).             
         ================================= -->
	<target name="create-nodep-jar" depends="create-jar">
		<unjar dest="${tmp.bin.dir}" overwrite="true">
			<fileset dir="${lib.dir}" includes="**/*.jar" />
		</unjar>
		<antcall target="manifest" />
		<jar destfile="${build.dir}/${ant.project.name}-nodep_${version}.jar" basedir="${tmp.bin.dir}" manifest="${tmp.bin.dir}/META-INF/MANIFEST.MF" />
		
	</target>
	
	<target name="doc" depends="javadoc">
		<copy todir="${doc.target.dir}">
			<fileset dir="${doc.src.dir}"/>
		</copy>
		<copy todir="${build.dir}">
			<fileset file="${doc.src.dir}/README.txt"/>
		</copy>
	</target>
	<target name="jaxb-generate">
		<exec command="xjc">
			<arg line="-d src -p org.dirigent.pattern.builder.jaxb resources/patterns/dirigent-pattern.xsd"/>
		</exec>
	</target>
	
	<target name="dist" depends="doc,create-jar,kettle-plugin">
		<copy todir="${build.dir}">
			<fileset dir="resources">
				<exclude name="bin/**"/>
			</fileset>	
		</copy>
		<copy todir="${build.dir}">
			<fileset dir="resources/bin"/>
		</copy>
		<delete dir="${tmp.dir}"></delete>
	</target>
</project>